@using Microsoft.AspNetCore.Identity
@using Beon.Infrastructure
@using Beon.Models

@inject SignInManager<BeonUser> SignInManager
@inject UserManager<BeonUser> UserManager

<div id="header">
  <div id="@(ViewBag.IsDiaryPage != true ? "header-logo" : "header-diary")">
    @if (ViewBag.IsDiaryPage != true) {
      <a id="logo" asp-controller="Home" asp-action="Index">
        <img src="/i/logo.png">
      </a>
    }
    else {
      <span class="blog-title">@ViewBag.DiaryTitle</span>
      <br>
      <span class="blog-subtitle">@ViewBag.DiarySubtitle</span>
    }
    <br>
    <span class="m4">Hello,
      @if (SignInManager.IsSignedIn(User))
      {
        <span>
          @((await UserManager.GetUserAsync(User)).DisplayName)
        </span>
      }
      else {
        <span>Guest</span>
      }
    </span>
  </div>
  <div style="width: 5px;"></div>
  <div id="header-links">
    <div class="header-links-spacer"></div>
    <div class="header-links-container">
      @if (SignInManager.IsSignedIn(User))
      {
        <span>
          <span class="m3">•</span>
          <a href="" onclick="event.preventDefault(); $('#logoff-form').submit()">
            Выйти
          </a>
          <form id="logoff-form" asp-controller="Account" asp-action="LogOff"></form>
        </span>
        <span>
          <span class="m3">•</span>
          <a asp-controller="Manage" asp-action="Index">
            Мои настройки...
          </a>
        </span>
        <span>
          <span class="m3">•</span>
          <a asp-controller="Diary" asp-action="Show" asp-route-userName="@await UserManager.GetUserNameAsync(await UserManager.GetUserAsync(User))">Мой дневник</a>
        </span>
        <span>
          <span class="m3">•</span>
          <a asp-controller="Diary" asp-action="Show" asp-route-userName="@await UserManager.GetUserNameAsync(await UserManager.GetUserAsync(User))">Написать в дневник</a>
        </span>
        <span>
          <span class="m3">•</span>
          <a asp-controller="Diary" asp-action="Show" asp-route-userName="@await UserManager.GetUserNameAsync(await UserManager.GetUserAsync(User))">Написать в дневник</a>
        </span>
      }
      else
      {
        <span>
          <span class="m3">•</span>
          <a href="" onclick="event.preventDefault(); $('#login-header').css('display', '');">Войти...</a>
          <!--
          <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">
            Login...
          </a>
          -->
        </span>
        <span>
          <span class="m3">•</span>
          <a asp-controller="Account" asp-action="Register" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">
            Регистрация
          </a>
        </span>
      }
    </div>
    <div class="header-links-spacer"></div>
    <div class="header-links-container">
      <span>
        <span class="m3">•</span>
        <a asp-controller="Home" asp-action="Index">
          BeOn
        </a>
      </span>
    </div>
    <div class="header-links-spacer"></div>
    <div class="header-links-container">
      <span>
        @if (SignInManager.IsSignedIn(User)) {
        <span class="m3">•</span>
        <a asp-controller="Manage" asp-action="ManageAvatars">
          Загрузка аватар
        </a>
        }
      </span>
    </div>
  </div>
</div>

<div id="login-header" style="display: none;">
  <partial name="_LoginFormPartial" model="@new LoginViewModel { ShowCloseButton = true, ReturnUrl = ViewContext.HttpContext.Request.PathAndQuery() }"></partial>
</div>

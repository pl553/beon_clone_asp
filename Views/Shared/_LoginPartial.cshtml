@using Microsoft.AspNetCore.Identity
@using Beon.Infrastructure
@using Beon.Models

@inject SignInManager<BeonUser> SignInManager
@inject UserManager<BeonUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-controller="Manage" asp-action="Index" title="Manage">Hello @((await UserManager.GetUserAsync(User)).DisplayName)! You are 
        @if (await UserManager.IsAdmin(User))
        {
            <b>an admin</b>
        }
        else {
            <b>a regular user</b>
        }
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-controller="Account" asp-action="LogOff">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-controller="Account" asp-action="Register" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">Login</a>
    </li>
}
</ul>
